{% comment %}
  Renders a media element for the product gallery.
  Media types include: image, video, external_video and model.
  Accepts:
  - media: {Object} Media Liquid object (required)
  - enable_image_zoom: {Boolean} Image zoom setting (required for media type image)
  - stacked: {Boolean} Layout type set as stacked (required)
  - featured: {Boolean} Media is set as featured (required)
  - height: {Number} Height to be passed to the image-style snippet
  - width: {Number} Width to be passed to the image-style snippet

  Usage:
  {%- for media in product.media -%}
    {% include 'media', media: media, enable_image_zoom: true, featured: true, stacked: true %}
  {%- endfor -%}
{% endcomment %}

{% capture media_id %}{{ section.id }}-{{ media.id }}{% endcapture %}
{% capture img_id_class %}product-single__media-{{ media_id }}{% endcapture %}
{% capture image_size %}{{ height }}x{{ height }}{% endcapture %}

{% case media.media_type %}
  {% when 'image' %}
    {% assign img_url = media | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
    <img
      class="product-image{% if media.alt contains 'youtube.com' %} video-link{% endif %}"
      src="{{ media | img_url: '1200x1200' }}"
      data-src="{{ img_url }}"
      data-widths="[180, 360, 590, 720, 900, 1080, 1296, 1512, 1728, 2048]"
      data-aspectratio="{{ media.aspect_ratio }}"
      data-sizes="auto"
      importance="high"
      {% if enable_image_zoom %}
        {% if media.alt contains 'youtube.com' %}
          {% assign mediaAltArray = media.alt | split: '|' | split: ' ' %}
          {% for mediaAlt in mediaAltArray %}
            {% if mediaAlt contains 'youtube.com' %}
              data-mfp-src={{mediaAlt | replace: "]",""}}
              class="mfp-iframe lazyload"
              aria-label="Play video"
              data-color=""
            {% endif %}
          {% endfor %}
        {% else %}
          data-mfp-src="{{ media | img_url: '1024x1024' }}"
          class="mfp-image lazyload {{ img_id_class }}"
        {% endif %}
      {% endif %}
      data-media-id="{{ media.id }}"
      alt="{{ product_title }} - {{ media.alt | escape | remove: "not-variant|" | remove: "hover|" }}"
      data-color="{{ media.alt | split: ' | ' | first }}"
    >
  {% when 'external_video' %}
    <div
      class="product-single__media product-single__media--video"
      style="padding-top: {{ 1 | divided_by: media.aspect_ratio | times: 100 }}%;"
    >
      {{ media | external_video_tag }}
    </div>
  {% when 'video' %}
    <div
      class="product-single__media product-single__media--video"
      style="padding-top: {{ 1 | divided_by: media.aspect_ratio | times: 100 }}%;"
    >
      {{ media | video_tag: controls: false, autoplay: true, class: 'media-video', image_size: image_size }}
    </div>
  {% when 'model' %}
    <div class="product-single__media" style="padding-top:100%;">
      {{
        media
        | model_viewer_tag: image_size: image_size, reveal: 'interaction', toggleable: true, data-model-id: media.id
      }}
    </div>
  {% else %}
    <div class="product-single__media" style="padding-top: {{ 1 | divided_by: media.aspect_ratio | times: 100 }}%;">
      {{ media | media_tag: class: 'media-item', image_size: image_size }}
    </div>
{% endcase %}
